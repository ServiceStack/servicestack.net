[{"slug":"feature1","draft":false,"title":"Blazor Dark Mode Everywhere","image":"https://servicestack.net/img/whatsnew/v6.5/dark-and-light-mode.png","tags":[],"date":"\/Date(1670630400000-0000)\/","content":"Tailwind has revolutionized how we style our Web Apps with its mobile first design system that's dramatically simplified creating maintainable responsive Web Apps. It also excels at adding support for Dark Mode with its first-class dark: modifier allowing the use of standard tailwind classes to specify what elements should look like when viewed in Dark Mode.\n\nWe're happy to announce that Dark Mode support has been added to **all ServiceStack.Blazor Tailwind components** and all Blazor Tailwind project templates where you'll be able to toggle on/off Dark Mode with the new **DarkModeToggle** component.","url":"https://docs.servicestack.net/releases/v6_05","wordCount":104,"lineCount":9,"group":"v6.5"},{"slug":"feature2","draft":false,"title":"New Blazor Components","image":"https://servicestack.net/img/whatsnew/v6.5/blazordiffusion-Autocomplete.png","tags":[],"date":"\/Date(1670630400000-0000)\/","content":"The ServiceStack.Blazor component library continues to expand with exciting new Components and improvements, including:\n\n- **Autocomplete** - Rich content Input to quickly search & select items\n- **TagInput** - UX friendly input for managing a list of strings like words or tags\n- **FormStyle.Card** - Render Auto Forms from POCO classes in a Card Layout\n- **NavList** - Beautiful Nav Links list component with Icons + Descriptions\n- **Colored Buttons** - Render buttons in different primary Tailwind colors\n- **SelectInput Expressions** - Declaratively define Select Input Options\n- **Custom Edit & Create Forms** - Use forms in custom AutoQueryGrids","url":"https://docs.servicestack.net/releases/v6_05#blazor-components","wordCount":103,"lineCount":15,"group":"v6.5"},{"slug":"feature3","draft":false,"title":"Blazor Diffusion","image":"https://servicestack.net/img/whatsnew/v6.5/blazordiffusion.com_splash.png","tags":[],"date":"\/Date(1670630400000-0000)\/","content":"The goal of our increasing Blazor investments is to enable a highly productive and capable platform for rapidly developing a majority of internal Apps CRUD functionality as well as enabling a hybrid development model where the management of Back office supporting tables can be quickly implemented using custom AutoQueryGrid components freeing up developers to be able to focus a majority of their efforts where they add the most value - in the bespoke Blazor UI's optimized customer-facing UX.\n\nTo best demonstrate its potential we've created [blazordiffusion.com](https://blazordiffusion.com) - a new ServiceStack.Blazor App front-end for Stable Diffusion - a deep learning text-to-image model that can generate quality images from a text prompt. It's a great example of Hybrid Development in action where the entire user-facing UI is a bespoke Blazor App that's optimized for creating, searching, cataloging and discovering Stable Diffusion generated images, whilst all its supporting admin tasks to manage the back office tables that power the UI were effortlessly implemented with custom AutoQueryGrid components.","url":"https://docs.servicestack.net/releases/v6_05#blazor-diffusion","wordCount":178,"lineCount":9,"group":"v6.5"},{"slug":"feature4","draft":false,"title":"Universal Blazor API Components","image":"https://servicestack.net/img/whatsnew/v6.5/blazor-universal-components.png","tags":[],"date":"\/Date(1670630400000-0000)\/","content":"The recommendation to access DB's directly in Blazor Server components encourages a more tightly-coupled and less reusable & testable architecture than the traditional well-defined API dev model used in client/server Mobile & Desktop Apps or Web SPA Apps like Blazor WASM.\n\nTo achieve the best of both worlds, we've enabled support for utilizing the In Process Service Gateway in Blazor Server Apps which lets you retain the traditional client/server dev model for invoking your Server APIs In Process - avoiding any serialization, HTTP networking or even Kestrel middleware overhead to invoke your APIs directly!\n\nThis enables using the exact same source code to call APIs in Blazor Server and WASM which allows us to develop reusable Blazor Components to invoke the same Server APIs that serve Web, Mobile and Desktop Apps in Blazor Server Apps.","url":"https://youtu.be/66DgLHExC9E","wordCount":145,"lineCount":11,"group":"v6.5"},{"slug":"feature1","draft":false,"title":"RAD Blazor","image":"https://servicestack.net/img/whatsnew/v6.4/blazor-components-youtube.jpg","tags":[],"date":"\/Date(1665446400000-0000)\/","content":"We're excited to announce exciting new Blazor Components enabling a compelling a Rapid Application Development platform for Blazor Apps delivering many of the productivity benefits previously limited to [Locode](/locode).\n\nOur new native Blazor Components allows for a beautiful progression story where you can start with a [Database-First Locode](https://docs.servicestack.net/locode/database-first) solution to instantly [generate Data Models and CRUD APIs](/locode/database-first#exporting-to-code-first-types) around your existing databases that thanks to the new `AutoQueryGrid` Blazor component will be able to trivially implement both CRUD UI's and optimized Blazor UIs in the same Blazor App.","url":"https://docs.servicestack.net/releases/v6_04","wordCount":101,"lineCount":9,"group":"v6.4"},{"slug":"feature2","draft":false,"title":"Blazor Server Template","image":"https://servicestack.net/img/whatsnew/v6.4/blazor-server.png","tags":[],"date":"\/Date(1665446400000-0000)\/","content":"We're happy to announce our new Blazor Server App template offering a number compelling advantages over Blazor WASM, including:\n\n- A superior dev model and debugging experience\n- Improved live-reload and faster iterative dev cycles\n- Full access to .NET Server functionality\n- Better start times & UI responsiveness\n- Less complexity from unnecessary client project or pre-rendering solutions","url":"https://docs.servicestack.net/releases/v6_04#blazor-server","wordCount":63,"lineCount":13,"group":"v6.4"},{"slug":"feature3","draft":false,"title":"Blazor Component Gallery","image":"https://servicestack.net/img/whatsnew/v6.4/gallery-splash.png","tags":[],"date":"\/Date(1665446400000-0000)\/","content":"ServiceStack.Blazor Components gives you the ideal development workflow without compromise. Effortless, highly productive, API integrated Rich Blazor UI Components with 100% Server model reuse and integrated contextual validation.\n\nTo better showcase our growing Blazor functionality we've created new Blazor Gallery websites showcasing usage of available rich Blazor Components for rapidly develop beautiful Tailwind Web Apps available in both [Blazor Server](https://blazor-gallery.servicestack.net) and [Blazor WASM](https://blazor-gallery.jamstacks.net) Web Apps.","url":"https://docs.servicestack.net/releases/v6_04#blazor-gallery","wordCount":82,"lineCount":9,"group":"v6.4"},{"slug":"feature4","draft":false,"title":"Debug DB Migrations from IDE","image":"https://servicestack.net/img/whatsnew/v6.4/database-migrations-youtube.jpg","tags":[],"date":"\/Date(1665446400000-0000)\/","content":"We've continued improving our story around [Code-First DB Migrations](/ormlite/db-migrations) and have created a [new video](https://www.youtube.com/embed/NIVFqute7JQ) demonstrating how it can be used to maintain DB Schema migrations under a typical development workflow.\n\nAs they encourage a structured workflow for incremental development of new App features we've upgraded all modern [jamstacks.net](https://jamstacks.net)\ntemplates to adopt DB Migrations for creating and populating their App DB.\n\nA benefit of DB Migrations being implemented in a library instead of wrapped up behind an external tool, is that it's better integrated and more versatile in supporting more executable options like being able to run from code, a feature the new `MigrationTasks` Explicit TestFixture benefits from enabling DB Migrations to be run or debugged directly from within your IDE.","url":"https://docs.servicestack.net/releases/v6_04#db-migrations","wordCount":140,"lineCount":12,"group":"v6.4"},{"slug":"feature1","draft":false,"title":"Simple Code-First DB Migrations","image":"https://servicestack.net/img/whatsnew/v6.3/db-migrations.png","tags":[],"date":"\/Date(1661817600000-0000)\/","content":"We're excited to share the next release of ServiceStack which sees the introduction of our simple Database Migration solution with Code-First DB Migrations which advances OrmLite's light-weight code-first development approach with a simple change based migration solution that facilitates the code-first development workflow of OrmLite.\n\nStarting from a seamless quick install and supporting multiple running options from command-line tooling, IDE run npm scripts, run, debug & verify from unit tests and integrated with our GitHub Action deployments where only successful migrations are deployed.\n\nInstead of relying on generation by an opaque tool, this code-first approach treats DB Migrations like any other maintainable & logically structured code written by developers where it maintains a connected audit history in source control together with the feature that needs the schema changes.","url":"https://docs.servicestack.net/releases/v6_03#code-first-db-migrations","wordCount":139,"lineCount":11,"group":"v6.3"},{"slug":"feature2","draft":false,"title":"Manage App Redis Servers with Redis Admin","image":"https://servicestack.net/img/whatsnew/v6.3/admin-ui-redis.png","tags":[],"date":"\/Date(1661817600000-0000)\/","content":"The Redis Admin UI lets you manage your App's configured Redis Server with a user-friendly UX for managing core Redis data types, simple search functionality to quickly find Redis values, quick navigation between related values, first class support for JSON values and a flexible command interface and command history to inspect all previously run redis commands that's easily editable & rerun.","url":"https://docs.servicestack.net/releases/v6_03#redis-admin-ui","wordCount":75,"lineCount":7,"group":"v6.3"},{"slug":"feature3","draft":false,"title":"Browse App RDBMS Tables with Database Admin","image":"https://servicestack.net/img/whatsnew/v6.3/admin-ui-database.png","tags":[],"date":"\/Date(1661817600000-0000)\/","content":"The new built-in Database Admin UI lets you quickly browse your App's configured RDBMS schemas and tables, which without any additional configuration your App's configured databases, their schemas, tables and any registered [named connections](https://docs.servicestack.net/ormlite/getting-started#multiple-database-connections) will be navigable from the home page where they'll be browsable with a familiar tabular search results grid, similar in appearance and functionality to [Locode's Auto UI](/locode) where their resultsets can each be personalized with flexible query preferences and filtering options that's persisted across browser restarts.","url":"https://docs.servicestack.net/releases/v6_03#database-admin-ui","wordCount":98,"lineCount":7,"group":"v6.3"},{"slug":"feature1","draft":false,"title":"Beautiful Blazor Tailwind Template","image":"https://servicestack.net/img/whatsnew/v6.2/blazor-tailwind.png","tags":[],"date":"\/Date(1658707200000-0000)\/","content":"The feature-rich [Blazor WASM Tailwind](https://docs.servicestack.net/templates-blazor-tailwind) template us ideal for teams with strong C# skills building Line Of Business (LOB) applications who prefer utilizing Tailwind's modern utility-first CSS design system to create beautiful, instant-loading Blazor WASM Apps.","url":"https://docs.servicestack.net/releases/v6_02","wordCount":50,"lineCount":7,"group":"v6.2"},{"slug":"feature2","draft":false,"title":"Create Litestream Apps and Save 10x on Hosting","image":"https://servicestack.net/img/whatsnew/v6.2/litestream-costs.svg","tags":[],"date":"\/Date(1658707200000-0000)\/","content":"Having achieved the best architecture for delivering [max value](https://jamstacks.net/posts/hosting) and performance with our [jamstacks.net](https://jamstacks.net) templates, the last expensive vital component used in most Web Apps is hosting of their expensive managed databases. Despite most RDBMS's being OSS and free of licensing costs, major cloud companies continue to charge artificially high hosting costs to provide redundant hosting of App data.\n\n[Litestream](https://litestream.io) lets us avoid these expensive hosting costs by providing transparent per-second replica backups to inexpensive managed storage, enabling latency-free queries, simplified hosting architectures at vastly reduced hosting costs.","url":"https://docs.servicestack.net/releases/v6_02.html#litestream","wordCount":112,"lineCount":9,"group":"v6.2"},{"slug":"feature3","draft":false,"title":"Gain real-time insights with built-in Profiling","image":"https://servicestack.net/img/whatsnew/v6.2/profiling.png","tags":[],"date":"\/Date(1658707200000-0000)\/","content":"The new Request Logging & Profiling UIs bring an invaluable new level of observability into your App, from being able to quickly inspect and browse incoming requests, to tracing their behavior from their generated events in the new [Diagnostic Source](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.diagnosticsource?view=net-6.0) capabilities added all throughout ServiceStack, which both power the new UIs and enables new introspectability from code where you can now to tap in to inspect & debug when each diagnostic event occurs.","url":"https://docs.servicestack.net/releases/v6_02.html#request-logging-profiling","wordCount":94,"lineCount":7,"group":"v6.2"},{"slug":"feature4","draft":false,"title":"Manage DB Validation Rules with Validation UI","image":"https://servicestack.net/img/whatsnew/v6.2/validation-video.png","tags":[],"date":"\/Date(1658707200000-0000)\/","content":"The DB Validation feature leverages the existing [Declarative Validation](https://docs.servicestack.net/declarative-validation) infrastructure where it enables dynamically managing Request DTO Type and Property Validators from a RDBMS data source which immediately takes effect at runtime that carries the same performance profile at runtime as they can be optionally cached where they'll only need to be re-hydrated from the database after modification.","url":"https://docs.servicestack.net/releases/v6_02.html#db-validation","wordCount":76,"lineCount":7,"group":"v6.2"},{"slug":"feature1","draft":false,"title":"Rapid Application Development with Locode","image":"https://servicestack.net/img/whatsnew/v6.1/locode-splash.png","tags":[],"date":"\/Date(1652659200000-0000)\/","content":"We're excited to announce [Locode](/locode), our **Rapid Application Development** solution to quickly develop\nbeautiful Full Stack CRUD Apps around **AutoQuery APIs**, suitable for a wide number of use-cases including:\n\n- Rapid prototyping by creating an instant UI around existing **Database-First** RDBMS tables\n- Declarative **Code-First** development model with unprecedented customizability (exportable from Database-First)\n- **Hybrid Apps** with a custom UI to optimize common workflows whilst using Locode's Auto UI to manage Back office tables\n\nAs Locode's UI is built on top of ServiceStack's industrial strength AutoQuery APIs, Hybrid Apps can benefit from its superior end-to-end typed development model for creating Web, Mobile & Desktop Apps.","url":"https://docs.servicestack.net/releases/v6_01","wordCount":115,"lineCount":14,"group":"v6.1"},{"slug":"feature2","draft":false,"title":"Database-First Development Model","image":"https://servicestack.net/img/whatsnew/v6.1/youtube-locode-intro.png","tags":[],"date":"\/Date(1652659200000-0000)\/","content":"Using [AutoQuery's AutoGen](https://docs.servicestack.net/autoquery-autogen) enables the quickest way to modernize an existing database by dynamically creating Data Models & AutoQuery CRUD APIs from RDBMS table schemas at runtime.\n\nLocode provides a highly functional UI out-of-the-box that doesn't rely on code-gen that allows you to only override the Custom UI or Custom API implementation when needed resulting in a significantly smaller code-base to maintain as reflected in the comparitive code-bases of a customized\nNorthwind Locode App vs the Northwind code-base of a popular RAD code-gen tool for .NET\n\n<table>\n  <thead>\n    <tr>\n      <th>Locode Northwind</th>\n      <th>Radzen Northwind</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><strong>~120 lines</strong> of C#</td>\n      <td><strong>~4500 lines</strong> of C# (generated)</td>\n    </tr>\n    <tr>\n      <td class=\"pr-2\"><strong>29 lines</strong> custom Home Page</td>\n      <td><strong>10k+ lines</strong> of Angular HTML/TS (generated)</td>\n    </tr>\n  </tbody>\n</table>","url":"https://docs.servicestack.net/releases/v6_01#database-first","wordCount":134,"lineCount":29,"group":"v6.1"},{"slug":"feature3","draft":false,"title":"Code-First Development Model","image":"https://servicestack.net/img/whatsnew/v6.1/chinook-splash.png","tags":[],"date":"\/Date(1652659200000-0000)\/","content":"[Code-First](https://docs.servicestack.net/locode/code-first) is the natural development model of [AutoQuery Services](https://docs.servicestack.net/autoquery-rdbms) which facilitates the majority of a\nSystem and its UI can be developed from simple, declarative C# POCOs to define the underlying RDBMS Schema Data Models and the precise typed\nAPI DTO Contracts of their surrounding AutoQuery & CRUD APIs. The Data and Service models can be further enhanced by ServiceStack's vast\n[declarative attributes](https://docs.servicestack.net/locode/declarative) where a significant amount of behavior, functionality and customization can be defined, ranging from:\n\n- Customize how [Data Models map to DB Tables](https://docs.servicestack.net/locode/declarative.html#table-data-model-attributes) & enlist RDBMS features\n- [Customize Serialization & API behavior](https://docs.servicestack.net/locode/declarative.html#custom-serialization)\n- [Define AutoQuery & CRUD API behavior](https://docs.servicestack.net/locode/declarative.html#autoquery-attributes)\n- Define [Validation Rules](https://docs.servicestack.net/locode/declarative.html#type-validation-attributes) and [Authorization restrictions](https://docs.servicestack.net/locode/declarative.html#authentication-restrictions)\n- [Annotate & Document APIs](https://docs.servicestack.net/locode/declarative.html#annotate-apis)\n- [Customize UI Behavior & Appearance](https://docs.servicestack.net/locode/declarative.html#result-formatters)","url":"https://docs.servicestack.net/releases/v6_01#code-first","wordCount":165,"lineCount":17,"group":"v6.1"},{"slug":"feature4","draft":false,"title":"Hybrid Locode Apps with Blazor WASM","image":"https://servicestack.net/img/whatsnew/v6.1/talent-splash.png","tags":[],"date":"\/Date(1652659200000-0000)\/","content":"Locode's declarative dev model lets you focus on your new App's business requirements where its data model, API capabilities, input validation & multi-user Auth restrictions can be defined simply using annotated C# POCOs.\nThis provides immense value at the start of the development cycle where functional prototypes can be quickly iterated to gather business requirements\n\nOnce requirements have solidified, its typed AutoQuery APIs can easily be reused to develop custom UIs to optimize important workflows.\n\n[Talent Blazor](https://github.com/NetCoreApps/TalentBlazor) is a new App showcasing an example of this where its entire back-office functionality can be managed through Locode whilst an optimized **Blazor WASM App** is created to optimize its unique workflow requirements which also benefits from the superior productive dev model of its Typed APIs.","url":"https://docs.servicestack.net/releases/v6_01#hybrid-locode-apps","wordCount":138,"lineCount":12,"group":"v6.1"},{"slug":"feature1","draft":false,"title":"FREE Individual & OSS Licenses","image":"https://servicestack.net/img/whatsnew/v6/servicestack-100m-976w.png","tags":[],"date":"\/Date(1642723200000-0000)\/","content":"We're starting off 2022 eclipsing an impressive milestone having crossed\n[100M+ NuGet downloads](https://www.nuget.org/profiles/servicestack) which we're celebrating by making ServiceStack FREE for Individuals & collaborative OSS Projects.\n\nWe've also created 2 new community spaces for ServiceStack developers to engage with each other:\n\n- [ServiceStack/Discuss](https://github.com/ServiceStack/Discuss/discussions/)\n- [#ServiceStack channel on Discord](https://discord.gg/w4ayGbuYpA)\n\nThese new spaces are welcome to all users of the framework that we hope together with the new free licenses will encourage developers build and share their amazing creations with each other! 🎉","url":"https://docs.servicestack.net/releases/v6_00","wordCount":97,"lineCount":15,"group":"v6.0"},{"slug":"feature2","draft":false,"title":"API Explorer","image":"https://servicestack.net/img/whatsnew/v6/api-details-CreateBooking.png","tags":[],"date":"\/Date(1642723200000-0000)\/","content":"Now built into every ServiceStack v6 App is API Explorer - an instant integrated Postman and Swagger UI alternative to quickly Call and Explore your APIs.\n\nThe entire API Explorer UI is driven by the rich metadata around your APIs and AppHost's registered plugins capturing greater knowledge about your APIs and is able to provide a smarter, richer and more optimized UX than what would be possible going through lowest common denominator specs like Open API.\n\nWith envious performance and unmatched customizability, API Explorer lets you easily incorporate gorgeous, rich, interactive API Documentation API Consumers will love who'll be able to read its source code in their preferred programming language and easily call from their existing Client Apps.","url":"https://docs.servicestack.net/releases/v6#api-explorer","wordCount":126,"lineCount":11,"group":"v6.0"},{"slug":"feature3","draft":false,"title":"Blazor WebAssembly Jamstack Template","image":"https://servicestack.net/img/whatsnew/v6/blazor-wasm.png","tags":[],"date":"\/Date(1642723200000-0000)\/","content":"Our new Blazor WebAssembly (WASM) template is ideal for teams with strong C# skills building Line Of Business (LOB) applications. Utilizing an API First development model, the C# Blazor front-end is able to take advantage of the clean separation of ServiceStack APIs to enjoy instant frictionless 100% reuse of API Types as-is, without any reliance on any tooling or unproductive out-of-sync code-gen build steps interrupting developers workflow.\n\nTogether with new .NET Service Clients Apis it results in the ideal productive dev model to bind Blazor UIs to ServiceStack APIs.\n\nTemplates make use of **ServiceStack.Blazor** a new package of integrated functionality with ServiceStack, inc. JSON API HttpClient Factory, API-enabled base components & themable Bootstrap + Tailwind UI controls.\n\nIn addition to TODO MVC and CRUD UI examples demonstrating its productive dev model, it also includes pre-rendering solutions for instant load times & GitHub Actions for effortless optimal Jamstack CDN deployments.","url":"https://docs.servicestack.net/templates-blazor","wordCount":160,"lineCount":13,"group":"v6.0"},{"slug":"feature4","draft":false,"title":"C# Jamstack Templates","image":"https://servicestack.net/img/whatsnew/v6/jamstacks-net.png","tags":[],"date":"\/Date(1642723200000-0000)\/","content":"ServiceStack's new [jamstacks.net](https://jamstacks.net) templates encapsulates the latest technologies at the forefront of modern web development to deliver both a great developer experience and performant end-user UX.\n\nJamstack (JavaScript, APIs, and Markup) is a modern architecture pattern to build fast, secure and easy to scale web applications where pre-rendering content, enhancing with JavaScript and leveraging CDN static hosting results in a highly productive, flexible and performant system that takes advantage of CDN edge caches to deliver greater performance & efficiency at lower cost.\n\nIt's quickly becoming the preferred architecture for modern web apps with benefits extending beyond performance to improved Security, Scale, Maintainability, Portability, Developer Experience & lower costs with your App's pre-rendered static UI assets on Content Delivery Network (CDN) edge caches close to users locations.\n\nThese new templates represent the best-in class experiences for their respective React, Vue & Blazor WASM ecosystems each, packed with features & examples common in many websites including Integrated Auth, rich Markdown content as well as TODOs MVC and CRUD examples with built-in contextual validation binding. As such they're now recommended over our existing SPA and C# MVC Templates.","url":"https://docs.servicestack.net/releases/v6#jamstack","wordCount":197,"lineCount":13,"group":"v6.0"}]